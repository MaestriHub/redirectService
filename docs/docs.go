// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "web window with button on application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "html"
                ],
                "summary": "Main web window",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Юзер агент пользователя. ex: Android",
                        "name": "User-Agent",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор (NanoID)",
                        "name": "linkId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.ErrorDTO"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.ErrorDTO"
                        }
                    }
                }
            }
        },
        "/fingerprint/find/{linkId}": {
            "post": {
                "description": "we want to associate direct link with new user in app by fingerprint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fingerprint"
                ],
                "summary": "Find device by fingerprint",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Юзер агент пользователя. ex: Android",
                        "name": "User-Agent",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор (NanoID)",
                        "name": "linkId",
                        "in": "path"
                    },
                    {
                        "description": "Данные об устройстве",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/params.Fingerprint"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resp.DirectLinkDTO"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.ErrorDTO"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.ErrorDTO"
                        }
                    }
                }
            }
        },
        "/fingerprint/{linkId}": {
            "post": {
                "description": "Uses for define who go to app with link",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fingerprint"
                ],
                "summary": "Create device fingerprint",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Юзер агент пользователя. ex: Android",
                        "name": "User-Agent",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор (NanoID)",
                        "name": "linkId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные об устройстве",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/params.Fingerprint"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.ErrorDTO"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.ErrorDTO"
                        }
                    }
                }
            }
        },
        "/link/client": {
            "post": {
                "description": "Generates a new invite link for client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "link"
                ],
                "summary": "Create to client invite",
                "parameters": [
                    {
                        "description": "Данные клиента",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/params.CreateClientInviteLink"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/resp.DirectLinkDTO"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.ErrorDTO"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.ErrorDTO"
                        }
                    }
                }
            }
        },
        "/link/employee": {
            "post": {
                "description": "Generates a new invite link for an employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "link"
                ],
                "summary": "Create an employee invite",
                "parameters": [
                    {
                        "description": "Данные сотрудника",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/params.CreateEmployeeInviteLink"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/resp.DirectLinkDTO"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.ErrorDTO"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.ErrorDTO"
                        }
                    }
                }
            }
        },
        "/link/salon": {
            "post": {
                "description": "Generates a new invite link for salon",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "link"
                ],
                "summary": "Create to salon invite",
                "parameters": [
                    {
                        "description": "Данные салона",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/params.CreateSalonInviteLink"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/resp.DirectLinkDTO"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.ErrorDTO"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.ErrorDTO"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "params.CreateClientInviteLink": {
            "type": "object",
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "employeeId": {
                    "type": "string"
                }
            }
        },
        "params.CreateEmployeeInviteLink": {
            "type": "object",
            "properties": {
                "employeeId": {
                    "type": "string"
                },
                "salonId": {
                    "type": "string"
                }
            }
        },
        "params.CreateSalonInviteLink": {
            "type": "object",
            "properties": {
                "salonId": {
                    "type": "string"
                }
            }
        },
        "params.Fingerprint": {
            "type": "object",
            "properties": {
                "colorDepth": {
                    "type": "integer"
                },
                "cores": {
                    "type": "integer"
                },
                "language": {
                    "type": "string"
                },
                "languages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "memory": {
                    "type": "integer"
                },
                "pixelRatio": {
                    "type": "number"
                },
                "screenHeight": {
                    "type": "integer"
                },
                "screenWidth": {
                    "type": "integer"
                },
                "timeZone": {
                    "type": "string"
                }
            }
        },
        "resp.DirectLinkDTO": {
            "type": "object",
            "properties": {
                "event": {
                    "type": "string"
                },
                "nanoId": {
                    "type": "string"
                },
                "payload": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "resp.ErrorDTO": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Описание ошибки"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Invite API",
	Description:      "API for generating links and catch fingerprints.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
